import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.cluster import KMeans
from sklearn.mixture import GaussianMixture
import sklearn. metrics as sm
import pandas as pd
import numpy as n—Ä
iris = datasets.load_iris()
x=pd.DataFrame(iris.data) 
x.columns=['Sepal_Length', 'Sepal_Width', 'Petal_Length', `Petal_Width']
Y =pd.DataFrame(iris. target)
Y.columns = [ 'Targets']
print(x)
print(Y)
colormap = np.array([`red', 'lime', 'black'])
plt.subplot(1,2,1)
plt.scatter(x.Petal_Length, X.Petal_Width, c=colormap[Y.Targets], s=40)
plt.title( 'Real Clustering')
modell = KMeans(n_clusters=3)
model1.fit(x)
plt.subplot(1,2,2)
plt.scatter(x.Petal_Length, X.Petal_width, c=colormap[modell.labels_],s=40)
plt.title( 'K Mean Clustering')
plt.show()
model2 = GaussianMixture(n_components=3)
model2.fit(x)
plt.subplot(1,2,1)
plt.scatter(x.Petal_Length. X.Petal Width, c=colormap[model2.predict(X)],s=40)
plt.title( 'EM Clustering*)
plt.show()
print("Actual Target is:\n", iris.target)
print("K Means:\n", ,modell.labels_)
print("EM:\n" ,model2.predict(x))
print("Accuracy of KMeans is",sm.accuracy_score(Y,modell.labels_))
print("Accuracy of EM is",sm.accuracy_score(Y, model2.predict(x)))
